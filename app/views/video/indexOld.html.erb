<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title></title>
    <meta name="author" content="">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <%= stylesheet_link_tag "application.css" %>

        <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">

        <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.6/styles/default.min.css">
        <link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.6/styles/tomorrow.min.css">




        <style type="text/css" media="screen">
            #editor {
                position: absolute;
                top: 8em;
                right: 0;
                bottom: 0;
                left: 0;
            }
        </style>


</head>

<body>
    <div class="p-3">
        <div class="row">
            <div class="col-md-6">
                <div class="">
                    <h1>Video #

                    </h1>
                    <p>Video Title</p>

                    <iframe id="player" src="https://www.youtube.com/embed/XKu_SEDAykw?enablejsapi=1" style="width:100%; height:500px;"></iframe>
                    <h5>Record of user actions:</h5>





                </div>
                <hr>

                </h2>
                <textarea style="width: 100%;height:10em;"></textarea>

            </div>


        </div>
        <div class="col-md-6">
            <h1>IDE #

            </h1>
            <p>Exercise Title</p>
            <!-- <textarea style="width: 100%;height: 76%;"></textarea> -->

            <div id="editor">
                /****************************************************************************** Code With Us Online C++ Compiler. *******************************************************************************/ #include&lt;iostream&gt; using namespace std; int main()
                { cout
                << "Hello World"; return 0; } </div>
                    <script src="https://pagecdn.io/lib/ace/1.4.12/ace.min.js" crossorigin="anonymous" integrity="sha256-T5QdmsCQO5z8tBAXMrCZ4f3RX8wVdiA0Fu17FGnU1vU="></script>
                    <script src="https://pagecdn.io/lib/ace/1.4.12/theme-twilight.min.js" crossorigin="anonymous"></script>
                    <script src="https://pagecdn.io/lib/ace/1.4.12/mode-c_cpp.min.js" crossorigin="anonymous"></script>
                    <script>
                        var editor = ace.edit("editor");
                        editor.setTheme("ace/theme/twilight");
                        editor.session.setMode("ace/mode/c_cpp");
                    </script>
            </div>

        </div>


    </div>


    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.6/highlight.min.js"></script>
    <script src="https://www.youtube.com/iframe_api"></script>
    <script>
        var player;

        function onYouTubeIframeAPIReady() {
            player = new YT.Player('player', {
                events: {
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        function onPlayerStateChange(event) {
            switch (event.data) {
                case -1:
                    console.log('video Started' + player.getCurrentTime());
                    console.log(Date());

                    // record('video Started' + player.getCurrentTime());
                    break;
                case 0:
                    console.log('video ended');
                    console.log(Date());

                    // record('video ended');
                    break;
                case 1:
                    console.log('video playing from ' + player.getCurrentTime());
                    console.log(Date());

                    // record('video playing from ' + player.getCurrentTime());
                    break;
                case 2:
                    console.log('video paused at ' + player.getCurrentTime());
                    console.log(Date());

                    // record('video paused at ' + player.getCurrentTime());
                    break;
                    // case 3:
                    //     record('video buffered ' + player.getCurrentTime());
                    //     break;
            }
        }

        function record(data) {
            // Do what you want with your data
            var p = document.createElement("p");
            p.appendChild(document.createTextNode(data));
            document.body.appendChild(p);
        }
    </script>

</body>

</html>